Import function from module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

First Test:
    >>> bg = BaseGeometry()
    >>> type(bg) == BaseGeometry
    True

area method is an instance method:
    >>> type(BaseGeometry.__dict__['area'])
    <class 'function'>

area method called via class with no args:
    >>> bg.__class__.area()
    Traceback (most recent call last):
    TypeError: area() missing 1 required positional argument: 'self'

area method args test (1 arg):
    >>> bg.area(10)
    Traceback (most recent call last):
    TypeError: area() takes 1 positional argument but 2 were given

area method normal test:
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented
